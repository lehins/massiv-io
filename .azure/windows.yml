jobs:
- job: ${{ parameters.name }}
  timeoutInMinutes: 120
  variables:
    STACK_ROOT: "$(System.DefaultWorkingDirectory)\\s"
    STACK_WORK: ".w"
    STACK_WORK_FULL: "$(Build.SourcesDirectory)\\massiv-io\\$(STACK_WORK)"
    BUILD_ARGS: "-j 2 --no-terminal --bench --no-run-benchmarks"
  pool:
    vmImage: ${{ parameters.vmImage }}
  strategy:
    matrix:
      lts-12.26:
        RESOLVER: "lts-12.26"
        STACK_YAML: "stack-extra-deps.yaml"
      lts-13.30:
        RESOLVER: "lts-13.30"
        STACK_YAML: "stack-extra-deps.yaml"
      lts-14.27:
        RESOLVER: "lts-14.27"
        STACK_YAML: "stack-extra-deps.yaml"
      lts-15:
        RESOLVER: "lts-15"
      nightly:
        RESOLVER: "nightly"
    maxParallel: 5
  steps:
  - task: Cache@2
    displayName: Cache STACK_ROOT
    inputs:
      key: '"${{ parameters.name }}" | "STACK_ROOT" | "$(RESOLVER) | $(Build.SourceBranch)"'
      path: "$(STACK_ROOT)"
      restoreKeys: |
        "${{ parameters.name }}" | "STACK_ROOT" | "$(RESOLVER) | $(Build.SourceBranch)"
        "${{ parameters.name }}" | "STACK_ROOT" | "$(RESOLVER) | refs/heads/master"
      cacheHitVar: STACK_ROOT_RESTORED
  - powershell: |
      move /y "$env:STACK_ROOT\\bin" "$env:LOCALAPPDATA\\Programs\\stack"
    displayName: Restore binaries
    condition: eq(variables.STACK_ROOT_RESTORED, 'true')
    continueOnError: true
  - task: Cache@2
    displayName: Cache STACK_WORK
    inputs:
      key: '"${{ parameters.name }}" | "STACK_WORK" | "$(RESOLVER) | $(Build.SourceBranch)"'
      path: "$(STACK_WORK_FULL)"
      restoreKeys: |
        "${{ parameters.name }}" | "STACK_WORK" | "$(RESOLVER) | $(Build.SourceBranch)"
        "${{ parameters.name }}" | "STACK_WORK" | "$(RESOLVER) | refs/heads/master"
  - task: Bash@3
    displayName: Setup environment
    inputs:
      targetType: 'inline'
      script: |
        set -x
        # Install stack
        curl -sSkL https://www.stackage.org/stack/windows-x86_64 -o stack.zip
        7z x stack.zip stack.exe -aoa
        # Script for restoring source files modification time from commit to avoid recompilation.
        curl -sSkL https://gist.githubusercontent.com/lehins/fd36a8cc8bf853173437b17f6b6426ad/raw/d9ddb32cac2f0dc6800be4fa54d450f0dcda6c60/git-modtime.hs -o git-modtime.hs
        # Restore mod time and setup ghc, if it wasn't restored from cache
        ./stack script --resolver ${RESOLVER} git-modtime.hs
  - powershell: |
      xcopy "$env:LOCALAPPDATA\\Programs\\stack" "$env:STACK_ROOT\\bin" /l /s /r /k /i /h /y /b
    displayName: Save binaries
    continueOnError: true
  - task: Bash@3
    displayName: 'stack build'
    env:
      ARGS: "--resolver $(RESOLVER)"
    inputs:
      targetType: 'inline'
      script: |
        set -x
        ./stack ${ARGS} test --no-run-tests ${BUILD_ARGS} --haddock --no-haddock-deps
  - task: Bash@3
    displayName: 'massiv-io:test'
    env:
      ARGS: "--resolver $(RESOLVER)"
    inputs:
      targetType: 'inline'
      script: |
        set -x
        ./stack ${ARGS} test massiv-io:tests ${BUILD_ARGS}
  - task: Bash@3
    displayName: 'massiv-io:doctest'
    env:
      ARGS: "--resolver $(RESOLVER)"
    inputs:
      targetType: 'inline'
      script: |
        set -x
        ./stack ${ARGS} test massiv-io:doctests ${BUILD_ARGS}
